DROP TABLE IF EXISTS user_progress;
DROP TABLE IF EXISTS "module";
DROP TABLE IF EXISTS knowledge;
DROP TABLE IF EXISTS track;
DROP TABLE IF EXISTS "user";

CREATE TABLE "user" (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name TEXT NOT NULL,
	email TEXT NOT NULL,
	last_name TEXT NOT NULL,
	password TEXT NOT NULL,
	user_type INTEGER -- 1-newbie, 2-old
);

CREATE TABLE track (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(200) NOT NULL
);

CREATE TABLE knowledge (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(200) NOT NULL,
	content TEXT
);

CREATE TABLE "module" (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(200) NOT NULL,
	content TEXT,
	html TEXT,
	id_track INTEGER UNIQUE NOT NULL REFERENCES track(id)
);

CREATE TABLE user_progress (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	last_complete_page INTEGER,
	page_quantity INTEGER,
	id_user INTEGER UNIQUE NOT NULL REFERENCES "user"(id),
	id_track INTEGER UNIQUE NOT NULL REFERENCES track(id)
);

INSERT INTO "user" (name, email, last_name, password, user_type) VALUES 
	('admin', 'example@mail.ru', 'admin', '111111', 2);
	
INSERT INTO track (name) VALUES 
	('обучение гуапчича');
	
INSERT INTO knowledge (name, content) VALUES 
	('топовый knowledge', 'офигенный knowledge');
	
INSERT INTO "module" (name, content, html, id_track) VALUES 
	('топовый module', 'офигенный module', '<br>', 1);

INSERT INTO user_progress (last_complete_page, page_quantity, id_user, id_track) VALUES 
	(10, 100, 1, 1);
